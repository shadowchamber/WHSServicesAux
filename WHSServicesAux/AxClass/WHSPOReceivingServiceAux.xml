<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSPOReceivingServiceAux</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSPOReceivingServiceAux
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createWork</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates work based on the given <c>PurchLine</c>.
    /// </summary>
    /// <param name = "_purchLine">
    /// The purchase line to create work from
    /// </param>
    /// <returns>
    /// Work build id of the created work.
    /// </returns>
    protected WHSWorkBuildId createWork(PurchLine _purchLine)
    {
        WHSLicensePlate licensePlate = WHSLicensePlate::createLicensePlate(pass.lookup(#LicensePlateId), true, this.getDefaultContainerTypeCode());
       
        WHSWorkCreatePurchLine workCreatePurchLine = new WHSWorkCreatePurchLine(_purchLine);
        workCreatePurchLine.parmLoadId(pass.lookupStr(#LoadId));
        workCreatePurchLine.parmInventLocationId(pass.lookup(#InventLocationId));
        workCreatePurchLine.parmInventQty(WHSCatchWeightHelper::convertInventQuantity(_purchLine.ItemId,
                                                                                 pass.lookup(#CurrentUOM),
                                                                                 pass.lookupNum(#CurrentQty),
                                                                                 _purchLine.InventDimId));

        Qty calcCatchWeight;
        boolean isCWItem = PdsGlobal::pdsIsCWItem(_purchLine.ItemId);
        if (isCWItem)
        {
            InventHandlingQty totalReceiptQty = WHSCatchWeightHelper::convertInventQuantity(pass.lookup(#ItemId), pass.lookup(#UOM), pass.lookupNum(#Qty), _purchLine.InventDimId);

            if (WHSInventTable::shouldCaptureAggregateWeight(_purchLine.ItemId))
            {
                calcCatchWeight = WHSCatchWeightHelper::calculateAverageWeight(workCreatePurchLine.parmInventQty(),
                                                                        totalReceiptQty - pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightQtySum),
                                                                        pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeight) - pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightWeightSum),
                                                                        InventTable::inventDecimals(_purchLine.ItemId));
            }
            else
            {
                // If not capturing aggregate weight use work creation handling quantity rounded to correct decimal precision.
                calcCatchWeight = WHSCatchWeightHelper::calculateAverageWeight(workCreatePurchLine.parmInventQty(),
                                                                        workCreatePurchLine.parmInventQty(),
                                                                        pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeight),
                                                                        InventTable::inventDecimals(_purchLine.ItemId));

                pass.remove(WHSWorkExecuteDisplayCatchWeightControls::CatchWeight);
            }

            workCreatePurchLine.parmCatchWeight(calcCatchWeight);

            if (workCreatePurchLine.parmInventQty() != (totalReceiptQty - pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightQtySum)))
            {
                pass.insert(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightQtySum, pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightQtySum) + workCreatePurchLine.parmInventQty());
                pass.insert(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightWeightSum, pass.lookupNum(WHSWorkExecuteDisplayCatchWeightControls::CatchWeightWeightSum) + calcCatchWeight);
            }
        }

        // Auto Generate catch weight tag records based on configs
        if (isCWItem
            && WHSInventTable::isCatchWeightTagTracked(_purchLine.ItemId)
            && WHSInventTable::shouldCaptureAggregateWeight(_purchLine.ItemId)
            && WHSRFMenuItemTable::find(pass.lookup(#MenuItem)).GenerateCatchWeightTag
            && !WHSReceiptDetails::existByReceiptIdLicensePlate(pass.lookup(#ReceiptId), pass.lookup(#LicensePlateId)))
        {
            WHSCatchWeightTagCreationSource tagSource = WHSCatchWeightTagCreationSource::instantiateFromSource(_purchLine, pass);
            WHSCatchWeightTagCreationMethod tagMethod = WHSCatchWeightTagCreationMethod::newAutoTagCreation(workCreatePurchLine.parmInventQty(), calcCatchWeight);
            WHSCatchWeightTagCreator tagCreator = WHSCatchWeightTagCreator::construct();
            this.trackAutoGeneratedCatchWeightTags(tagCreator.createCatchWeightTags(tagSource, tagMethod));
        }

        workCreatePurchLine.parmCreatedBy(userId);
        workCreatePurchLine.parmUnitizeQty(pass.lookupNum(#Qty));
        workCreatePurchLine.parmLicensePlateGroupingPolicy(pass.lookup(#Unitization));
        workCreatePurchLine.parmTargetLicensePlateId(licensePlate.LicensePlateId);
        workCreatePurchLine.parmWorkTemplateCode(WHSRFMenuItemTable::find(pass.lookup(#MenuItem)).WorkTemplateCode);
        workCreatePurchLine.parmDispositionCode(pass.lookupStr(#Disposition));
        workCreatePurchLine.parmReceiptId(pass.lookup(#ReceiptId));
        workCreatePurchLine.parmWorkProcess(this.workProcess());
        workCreatePurchLine.parmStartLocationId(this.receivingLocationId());

        WHSWorkBuildId workBuildId = workCreatePurchLine.createWork();

        if (isCWItem && pass.exists(WHSWorkExecuteDisplayCatchWeightControls::ScannedCatchWeightTagList))
        {
            WHSCatchWeightTagLastRegistration::updateCatchWeightTagRegistrationWorkLine(str2con(pass.lookupStr(WHSWorkExecuteDisplayCatchWeightControls::ScannedCatchWeightTagList)),
                WHSWorkTable::findInboundWorkByWorkBuildId(workBuildId).WorkId);
        }

        return workBuildId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>